/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null){
            return head;
        }
        int n=0;
        ListNode curr=head;
        while(curr!=null){
            n++;
            curr=curr.next;
        }
        if(k==n){
            return head;
        }
        k=k%n;
        if(k==0){
            return head;
        }
        n-=k;
        ListNode prev=null, temp=head;
        while(n>0){
            prev=temp;
            temp=temp.next;
            n--;
        }
        prev.next=null;
        ListNode tail=temp;
        while(tail.next!=null){
            tail=tail.next;
        }
        tail.next=head;
        head=temp;
        return head;
    }
}
